apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "go-team.fullname" . }}
  labels:
    app: {{ template "go-team.name" . }}
    chart: {{ template "go-team.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  {{- if not .Values.hpa.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: {{ template "go-team.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
          prometheus.io/scrape: 'true'
          prometheus.io/path: '/metrics'
          prometheus.io/port: '8080'
      labels:
        app: {{ template "go-team.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
 imagePullSecrets:
        - name: {{ .Values.acrCredSecretName }} 
          env:
          - name: DB_NAME
            value: {{ .Values.dbName }}
          - name: DB_USER_NAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.dbSecretName }}
                key: mysqlUser
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.dbSecretName }}
                key: mysqlPassword
          - name: DB_HOST_NAME
            value: {{ .Values.dbHostName }}
          resources: {}
